version: "3.9"
services:
  redis:
    image: redis:7-alpine
    restart: unless-stopped
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - cic-custodial-redis:/data
    ports:
      - "127.0.0.1:6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      interval: 10s
      timeout: 5s
      retries: 5
  # postgres:
  #   image: postgres:14-alpine
  #   restart: unless-stopped
  #   user: postgres
  #   environment:
  #     - POSTGRES_PASSWORD=postgres
  #     - POSTGRES_USER=postgres
  #   volumes:
  #     - cic-custodial-pg:/var/lib/postgresql/data
  #     - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
  #   ports:
  #     - "127.0.0.1:5433:5432"
  #   healthcheck:
  #     test: ["CMD-SHELL", "pg_isready"]
  #     interval: 10s
  #     timeout: 5s
  #     retries: 5
  # nats:
  #   image: nats:2.9
  #   restart: unless-stopped
  #   command: "-js -sd /nats/data"
  #   volumes:
  #     - cic-custodial-nats:/nats/data
  #   ports:
  #     - "127.0.0.1:4223:4222"
  #     - "127.0.0.1:8223:8222"
  asynqmon:
    image: hibiken/asynqmon
    restart: unless-stopped
    environment:
      - REDIS_ADDR=redis:6379
    ports:
      - "127.0.0.1:8080:8080"
    depends_on:
      redis:
        condition: service_healthy
  # cic-chain-events:
  #   image: ghcr.io/grassrootseconomics/cic-chain-events/cic-chain-events:latest
  #   restart: unless-stopped    
  #   env_file:
  #     - events.env
  #   ports:
  #     - '127.0.0.1:5001:5000'
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
volumes:
  cic-custodial-pg:
    driver: local
  cic-custodial-redis:
    driver: local
  cic-custodial-nats:
    driver: local
